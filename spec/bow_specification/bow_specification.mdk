Title         : Bunch of Wires Specification
Author        : Mark Kuemerle, Ramin Farjad, Bapi Vinnakota (the Open Domain Specific Architecture BoW Workstream) 
Logo          : True

Heading depth: 5
Document Class: [11pt]article
Package: [top=1in, bottom=1.25in, left=1in, right=1in]geometry
Package: fancyhdr

title,titlenote,titlefooter,authors,h1,h2,h3,h4,h5 {
  font-weight: bold;
}

~center
![bowspec_logo]

[bowspec_logo]: images/bowspec_logo.jpg "bowspec_logo" { width:auto; max-width:90% }
~


This document to be released under the following OCP copyright release:
{ page-break-before: always }

~center
COPYRIGHT LICENSE AGREEMENT
~

This Agreement (“Agreement”) is entered into on the date set forth below, 
(the “Effective Date”) by and between the Open Compute Project Foundation a 
Delaware corporation (“OCP”) and the entity identified below (“Licensor”).

WHEREAS, Licensor is the owner of and/or has certain rights in or to the 
works of authorship identified in the attached Exhibits (collectively, the “Work”).

WHEREAS, OCP desires to copy, distribute, make derivative works of and publish 
the Work and derivate works thereof, including without limitation in one or more 
OCP publications and/or on OCP’s website, and Licensor will benefit from OCP’s 
use of the Work as described in this Agreement.

NOW THEREFORE, in consideration of the promises in this Agreement, the parties 
agree as follows:

1.     Structure of the Agreement. There may be multiple Exhibits to this Agreement. 
Each Exhibit will be signed by an authorized representative and will be governed by 
and subject to the terms set forth in this Agreement, with the licenses applicable 
to the Work described therein effective as of the date the Exhibit is signed.

2.     License. Licensor hereby grants to OCP a non-exclusive, transferable (in 
accordance with Section 7 below), royalty free, fully-paid, perpetual, irrevocable, 
worldwide license, under Licensor’s copyrights in the Work, with the right to sublicense, 
to use, reproduce, create derivative works, distribute, and publicly display and 
perform the Work and derivative works thereof, in whole or in part, as a separate 
work or as part of a collective work. The foregoing will apply to all mediums now 
known or hereafter existing.

3.     Ownership of the Work / Other Rights Reserved. Except for the foregoing 
license, as between OCP and Licensor, Licensor retains all right, title and interest 
in and to the Work and all intellectual property rights therein. Licensor hereby 
reserves all rights not expressly granted in this Agreement. No additional licenses 
or rights whatsoever (including without limitation any patent licenses) are granted 
by implication, exhaustion, estoppel or otherwise.

4.     Representations and Indemnification. Licensor represents to OCP that: (i) Licensor 
is the sole and exclusive owner of the Work and all copyrights therein or Licensor has 
the right and authority to grant the licenses set forth in this Agreement and (ii) OCP’s 
exercise of the licenses set forth in this Agreement will not result in any infringement 
of any third party’s copyrights or the misappropriation of any third party’s trade secrets. 
Licensor agrees to indemnify and hold OCP harmless from and against any losses, damages, 
liabilities, settlement amount, costs and expenses (including reasonable attorneys’ fees) 
incurred by OCP in connection with any breach of the foregoing representations. This 
Section will survive the termination of this Agreement.

5.     Term and Termination. This Agreement will commence on the Effective Date and will 
terminate upon the written agreement of the parties or by written notice by OCP.

6.     Governing Law and Forum. This Agreement shall be solely and exclusively governed, 
construed and enforced in accordance with the laws of the Texas, USA, without reference 
to conflict of laws principles. Any suit, action or proceeding arising from or relating 
to this Agreement must be brought, solely and exclusively, in courts located in Travis 
County, Texas and each party irrevocably consents to the jurisdiction and venue of any 
such court.

7.     Assignment. OCP may assign this Agreement (a) with the consent of Licensor, not 
to be unreasonably withheld or delayed, or (b) upon notice, but without such consent, in 
connection with a merger, acquisition, change of control, or sale of substantially all 
the assets of OCP. This Agreement shall be binding upon and inure to the benefit of the 
parties and their successors and permitted assigns.

8.     Mutual Limits on Liability. Except as set forth below, in no event shall either 
party be liable to the other party in any manner, under any theory of liability, whether 
in contract, tort (including negligence), or other theory, for any indirect, consequential, 
incidental, exemplary, punitive, statutory or special damages, including lost profits, 
regardless of whether such party was advised of or was aware of the possibility of such 
damages. Except as set forth below, in no event shall the total, cumulative liability 
of either party regarding any and all claims and causes of action, under any theory of 
liability, whether in contract, tort (including negligence), or otherwise, exceed One 
Thousand Dollars ($1,000). The limitations set forth in this Section will not apply to 
liability arising under Section 4 (Representations and Indemnification) above. This 
Section will survive termination of this Agreement.

9.     Entire Agreement. This Agreement constitutes the entire agreement between the 
parties with respect to its subject matter and it supersedes all prior or contemporaneous 
oral or written agreements and representations concerning the subject matter herein. This 
Agreement may be amended only in a written document signed by both parties. This Agreement 
shall not be interpreted or construed against the party preparing it.
10.  Counterparts and Facsimile Signatures. This Agreement may be executed in counterparts 
all of which taken together shall constitute one single agreement between the parties. A 
facsimile transmission of the executed signature page of this Agreement shall constitute 
due and proper execution of this Agreement by the applicable party.
{ page-break-after: always }

[TOC]

[TITLE]

# Introduction 

The Bunch of Wires (BoW) specification is a very simple, open and interoperable 
physical interface between any 2 or more  chiplets or chip-scale-packages (CSP) 
on a common package.

## Overview

This specification will describe the BoW interface.  The specification also leaves 
open the possibility of pin-compatible interfaces that operate at higher data rates 
for increased throughput per chip edge.  This specification also describes a 
terminated mode that operates at increased data rates.  It is also possible 
that in the future other BoW-compatible technology enhancements will further 
increase throughput per chipedge.  Examples of this include previous discussions 
on a Turbo mode using simultaneous bidirectional communication.  That mode is not 
covered in this draft.

### Objectives

The BoW interface is a set of backward compatible die-to-die parallel 
interfaces that provides the flexibility to trade off Throughput/wire, 
design complexity, cost, packaging technology. Backward as defined by 
every new mode being compatible with the "Basic mode" defined in this 
specification. Each future version of this specification is expected 
to be compatible with at least two previous significant versions.
The BoW interface aims to meet the following design objectives:

* Be inexpensive to implement 
* Portable across process nodes ranging from 28nm to 5nm
* Portable across multiple bump pitches
* Have the flexibility to support advancing packaging technology
* Be unencumbered by technology license costs
* Very low power (< 1 pJ/bit) as defined by Tx IO Pad, wire and Rx IO Pad.
* Very low latency: <5ns without FEC, <15 ns with FEC. Latency as 
defined from the PCS parallel interface at the source, through Tx 
interface, channel, Rx interface received at the PCS parallel 
interface at the receiver. Based on experience, the 5 ns 
target meets the latency requirements of high-performance 
applications and has been demonstrated to be achievable.
* Unidirectional throughput/Chip Edge target range:
  - Minimum Targets
    - 100 Gbps/mm with all packaging options
    - 1 Tbps/mm with advanced packaging options
    - Enable higher throughput at very short reach < 1 mm.
  - As reference examples, with a data rate of 4 Gbps/wire
    - achieve 200+ Gbps/mm with a bump pitch of 130um and with a die 
    edge stack depth no greater than 2 routing layers with organic 
    laminate packaging.
    - achieve 1+ Tbps/mm with a bump pitch of 50 um and with a die edge 
    stack depth no greater than 4 routing layers with advanced 
    packaging.

### Advantages

The Bunch of Wires interface provides several key advantages for chiplet based systems:

* Can operate at higher data rates per pin than existing parallel standards
  *  -or-  lower data rates for compatibility with existing parallel standards
* Can be implemented in legacy technologies (process nodes) with generally available IP
* Terminated mode can be implemented in less effort than a traditional SERDES
* Does not require silicon based interconnect
* Is not constrained or intended to be used with a specific bump pitch
  * Two BoW interfaces can each be implemented at different bump pitches and can be 
  directly connected on an organic substrate, through fanout technology or through 
  silicon based interconnect.

While the advantages and simplicity are excellent benefits, the BoW interface does 
require more package routing traces than other serial based XSR or USR interconnect.
This drives BoW implementations that need the highest bandwidth to use fine bump 
pitches and ‘stacked’ BoW implementations, adding some complexity and cost in test 
and packaging.  Lower bandwidth implementations are free to use more standard 
packaging technology with coarse bump pitch.

### Scope
The scope of this document and of any contributions to this document are limited to:

1. The specification of the BoW interface that specifies the following functionality:
  a. Operating modes
  b. Physical design
  c. Test and testability
  d. Operation
  e. Management controls
  f. Methods to verify and validate compliance with this specification
  g. Recommended bump patterns and signal ordering
  h. Performance estimates
  i. Other functions or design practices that may be deemed necessary to meet the 
  design objectives listed above

2. The following activities are outside the scope of this document and contributions 
to this document:
  a. Physical implementations of the interface
  b. Integration of the interface with system-level data flow e.g. adapting a 
  standard PHY-layer abstraction such as PIPE interface to the BoW
  c. The actual use of this interface in systems
  d. The use of this interface outside a package

3. The following activities are intended to be addressed in subsequent versions 
of this specification:
  a. Test enablement
  b. Compliance points
  c. Initialization
  d. Security

### Compliance Summary

Table summarizes the compliance points that shall be met in order to meet the BoW requirements. Each of the 
compliance points is discussed in the specification.

This section will also include a discussion on interoperability.

<to be completed in subsequent draft>

## BoW Architecture
The BoW interfaces implement a physical-layer or PHY interconnect protocol, implementing 
Layer 1 of the 5-layer TCP/IP reference model.


~ Center
![bowspec_figure1]
~

[bowspec_figure1]: images/bowspec_figure1.JPG "bowspec_figure1" { width:auto; max-width:40% }

### BoW Configurations

There are multiple possible BoW configurations. All versions of the implementation must be 
interoperable with the minimum definition. All implementations are source synchronous 
parallel interfaces using a differential clock.  Beyond the basic implementation, 
adding termination provides higher performance per mm of beachfront bandwidth but is more 
complex to design. 

* All BoW configurations are intended to be used in multi-chiplet designs
* The full range of operating frequencies is expected to be documented in a data sheet. 
* All BoW implementations uses source synchronous clocking with data transmission aligned 
to clock edges.

The separate implementation of the interface are specified such that they can be connected 
to one another. ** When two interfaces are connected, data rate for the operating mode must be 
configured such that both ends support the data rate.**

All BoW implementations must support the minimum configuration of BoW (2Gbps datarate, 
1 Ghz clock rate, un-terminated IO)

* The throughput per wire on a BoW interface implementation will be affected by:
* The choice of packaging technology
* The physical distance between the chiplets being connected: Faster data rates may be easier 
with chiplets that are physically closer 
* Bump spacing: Coarse bumps may allow for circuitry to enable faster data rates.

The BoW specification provides for optional technology to increase the data rate per wire. 
But it is also possible for basic BoW implementation implemented with advanced packaging or 
between physically close chiplets to offer a higher data rate per wire than a terminated 
BoW interface in some configurations.

A high level view of the BoW Interface Data-rate ranges is shown below:

~ Center
![bowspec_figure2]
~

[bowspec_figure2]: images/bowspec_figure2.jpg "bowspec_figure2" { width:auto; max-width:100% }


#### BoW Basic Mode 

In BoW Basic, 
data rates can go up to 5 or 8 Gbps, depending on the package technology and wire length.
Wires are source-terminated (in the transmit circuit), but not terminated at the receiver.

#### BoW Fast Mode

In BoW Fast, data rates can go up to 16 Gbps.
Wires are both source-terminated and receiver-terminated to 
minimize signal reflections to enable higher data rates and longer wires.

#### Modes and Data Rates

Bow links shall follow the specifications in the following table.

~ TableFigure {#tab-rates1; caption: "BoW Modes and Data Rates"; width:100%;  }
|--------------|------------|-----------|-----------|-------------|-------|
|  Mode        |Package     |Clock rate | Data rate | Termination | Reach |
+:------------:+:----------:+:----------+:----------+:------------+-------+
| BoW Basic    | Interposer | 1-2.5 GHz | 2-5 Gbps  | Optional    | 2 mm  |
|              |            | 1-4 GHz   | 2-8 Gbps  |             | 1 mm  |
+--------------+------------+-----------+-----------+-------------+-------+
| BoW Basic    | Laminate   | 1-2.5 GHz | 2-5 Gbps  | Source      | 10 mm |
|              |            | 1-4 GHz   | 2-8 Gbps  |             | 5 mm  |
+--------------+------------+-----------+-----------+-------------+-------+
| BoW Fast     | Laminate   | 1-8 GHz   | 2-16 Gbps | Double      | 50 mm |
|--------------|------------|-----------|-----------|-------------+-------|
~
<Note this table appears in two places!!>

All BoW links are DDR (double data rate). 
DDR is defined as one data bit transmitted for each rising and each falling edge of the clock.

"Laminate" is intended to include organic laminate packages (a.k.a. buildup) and similar 
technologies with approximately 25 um line and space rules.
"Interposer" is intended to include silicon interposer and similar technologies 
with approximately 1 um line and space rules.


### BoW Interface Signals

The BoW interface defines several signal types. Each slice has these signals:

* Data (D0-D15) : data bits
* Clock (CLK+, CLK-) : differential clock
* FEC : Forward Error Correction bit (optional)
* AUX : Other uses (optional)

Except for the clocks, the bits are single-ended and DDR clocked.
FEC and AUX are optional.
All the signals in a slice in BoW Basic and BoW Fast are unidirectional 
and flow the same direction. There may be a full-duplex extension in the future.


# Design Assumptions
* Short connections, confined inside a package
* Supports package technologies from organic laminate to interposer
* Low signal loss
* Low latency
* Low energy per bit

# Standard Compatibility
The Bunch of Wires (BoW) is a simple Double Data Rate source synchronous interface 
that has much in common with other parallel interfaces including Intel AIB, High 
Bandwidth Memory and other simple source synchronous interfaces.

* A defined dataword width of 16 data bits per differential clock
* Support only for Double Data Rate (DDR) mode to simplify clocking
* Multiple supported datarates and modes
    * BoW Unterminated is most similar to AIB using un-terminated CMOS IO 
    to reduce power at low datarates
    * BoW Terminated uses terminated IO to improve SI and datarates

Due to reduced ESD requirements, the BoW specification is not expected to be 
compliant to off-package IO standards, though it may interoperate with other 
chiplets using CMOS IO buffers.

# Interface Specifications

## Block Diagram

~ Figure { #fig-slice_signals; caption: "BoW Single Slice Signals" }
![slice_signals]
[slice_signals]: images/bowspec_figure_slice_signals.PNG { width:auto; max-width:70% }
~

## Signals

Each BoW slice consists of a differential clock pair, 16 single-ended data wires, 
and optional FEC and AUX wires. Each BoW slice is unidirectional when in operation.
A chiplet may be designed with with Rx-only and Tx-only slices, or
each slice may have both Tx and Rx capability which is configured at runtime. 
A bidirectional link is composed of some number of slices configured for Rx and some for Tx.

FEC (Forward Error Correction) is an optional signal that allows using FEC to 
improve the bit error rate (BER).  AUX is an optional signal that can be used for purposes
such as DBI, flow control, redundancy, etc. Chiplets A and B will need to agree on
the details on FEC and AUX usage.

A BoW link is only specified for operation inside a package for reach and ESD reasons.

~ TableFigure {#tab-signals; caption: "BoW Signals"; }
|--------------|---------|------------|-------------|
| Function     | # Signals| Signal Name| Notes      |
+:-------------+:-------:+:-----------+:------------+
| Clock        | 2       | CLK+, CLK- | Differential|
|--------------|---------|------------|-------------|
| Data         | 16      | D0-15      |             |
|--------------|---------|------------|-------------|
|Forward Error | 1       |FEC         | Optional    |
|Correction    |         |            |             |
+--------------+---------+------------+-------------|
|Auxilliary    |1        |AUX         | Optional    |
|--------------|---------|------------|-------------|
~


# Timing

## Supported Data Rates

BOW supports the following data rates:

~ TableFigure {#tab-rates2; caption: "BoW Modes and Data Rates"; width:100%;  }
|--------------|------------|-----------|-----------|-------------|-------|
|  Mode        |Package     |Clock rate | Data rate | Termination | Reach |
+:------------:+:----------:+:----------+:----------+:------------+-------+
| BoW Basic    | Interposer | 1-2.5 GHz | 2-5 Gbps  | Optional    | 2 mm  |
|              |            | 1-4 GHz   | 2-8 Gbps  |             | 1 mm  |
+--------------+------------+-----------+-----------+-------------+-------+
| BoW Basic    | Laminate   | 1-2.5 GHz | 2-5 Gbps  | Source      | 10 mm |
|              |            | 1-4 GHz   | 2-8 Gbps  |             | 5 mm  |
+--------------+------------+-----------+-----------+-------------+-------+
| BoW Fast     | Laminate   | 1-8 GHz   | 2-16 Gbps | Double      | 50 mm |
|--------------|------------|-----------|-----------|-------------+-------|
~
<Note this table appears in two places!!>


~ Framed {color: blue}
Ken sez: I copied this table from the HotI 2020 paper, but what is our 
supporting data for 8 Gbps and 50 mm cases?
~

All BoW implementations must support the minimum 1 GHz clock rate, 
2 Gbps data rate using source-terminated I/O.
For ease of interoperation, data rate multiples of 
N Gbps should be supported for integer N>=2 to the max rate for that implementation.

## Clocking

~ Figure { #fig-clocking; caption: "BoW Clock and Data Block Diagram - One Tx Slice, One Rx Slice" }
![clocking]
[clocking]: images/bowspec_figure_PHY_block.PNG { width:auto; max-width:100% }
~

Figure [#fig-clocking] shows the clock and data flow for a single Tx slice and Rx slice.
On the Tx side, data bits (and optional FEC and AUX bits) come from the link layer, 
and are serialized to the line rate. 
At the Rx side, they are sampled with a common slicer clock in BoW Basic. 
BoW Fast may optionally implement per-bit delay adjust or per-bit slicer clock adjust.

All BoW interfaces shall be DDR (Double Data Rate): the data bit rate is twice the clock frequency, 
so data is clocked in on both edges of the clock in the Rx slice.

The DDR clock TxClk is provided to the Tx PHY from elsewhere on Chiplet-A.
This may come from an on-chip PLL (typically shared across multiple slices) or it 
can be routed from the RxClk of an Rx slice on Chiplet-A. 
In order to meet duty cycle requirements, a Duty Cycle Corrector (DCC) may be needed in the
Tx slice. TxClk is used to drive the serializers and provide the output CLK+,CLK- to
Chiplet-B.

On the Rx side, the PHY must align the slicer clock to sample the data correctly.
This may be done with a DLL or adjustable delays or other methods.
The PHY shall include control logic to self-align the slicer clock for correct sampling of the data.
Alignment is started by signal AlignDll? from the Rx Link Layer; 
the PHY provides a signal DllAligned? to the Link Layer when it is complete.

BoW Basic interfaces do not require per-wire alignment - the signals
within a slice are aligned sufficiently well by matching their paths.
BoW Fast interfaces may need per-wire delay adjustment or per-slicer clock adjustment.

All BoW interfaces shall be source synchronous within a slice. 
However clock skew between all the slices in a link depends on the implementation of the
TxClk distribution on the Tx slices in a link; this skew must be no more than 3 ns.
On both the Tx and Rx sides, the Link layer must include a Clock Domain Crossing (CDC) to 
align the data between CoreClk and PhyClk. 
These CDCs must also be able to absorb the slice-to-slice clock skew and 
core clock distribution skew across the whole link.

If DCCs are included in the PHY and they need an alignment cycle, they shall include 
control logic to perform self-alignment on a signal from the Link layer and send a completion 
signal back to the Link layer.

## Clock and Data Specifications

<XX
~ Framed {color: blue}

This is a list of possible specs within a slice

* Clock to data alignment   NA before align, 50 ps after align = 0.20 UI
* data to data alignment    18 ps
  * mismatch: 0.6 ps rms at Rx input, 1.1 ps rums at Rx output
  * fanout skew: 1 mm = 6 ps as a tline
  * clock distn within slice: 0.6 mm = 7 ps as an RC line
* clock rise/fall time   80 ps = 0.30 UI
* clock duty cycle   50+-5% 
* CLK+ vs CLK- skew    10 ps = 0.04 UI
* clock random jitter  10 ps rms = 0.04 UI rms
* clock bounded jitter  20 ps pp = 0.08 UI pp
* Eye: 400 mV, 50 ps ??    330 mV, 50 ps barely works in 65 nm sim at 8 Gbps
* clock slip   0 ppm

Slice to slice:

* slice to slice clock skew across width of a link   < 3 ns 
   * 2.5 ns to go 30 mm, across 22 slices
~
>

The following table shows a clock and data timing for a reference design in 65 nm CMOS on 
laminate packaging. These values are for CLK and data bits at the bumps of the BoW receiver.

~ TableFigure {#tab-clocks; caption: "BoW Clock Specifications"; width:100%; }
<This table generated with https://www.tablesgenerator.com/markdown_tables# >
<any plus signs need a backslash added manually >


| Spec                              | Value (time) | Value (UI)    | Condition           |
|:----------------------------------|--------------|---------------|---------------------|
| Data to data skew                 | 18 ps        | 0.14 UI       |                     |
| CLK to mean data skew             | 12 ps        | 0.10 UI       | after DLL alignment |
| CLK duty cycle                    | 50%          | 0.50 UI       |                     |
| CLK duty cycle error              | 5%           | 0.05 UI       |                     |
| CLK+ vs. CLK- skew                | 10 ps        | 0.04 UI       |                     |
| CLK cycle-to-cycle random jitter  |              |               |                     |
| CLK cycle-to-cycle bounded jitter |              |               |                     |
| CLK min rise/fall time            |              | 0.20 UI       |                     |
| CLK max rise/fall time            |              | 0.30 UI       |                     |
| Data min rise/fall time           |              | 0.20 UI       |                     |
| Data max rise/fall time           |              | 0.30 UI       |                     |
| Data Eye width                    | 50 ps        | 0.40 UI       |                     |
| Data Eye height                   | 400 mV       |               |                     |
| Data overshoot/undershoot         | 190 mV       | 25% of Vswing |                     |

~

The CLK and data signals must meet this condition:
~center
DataEyeWidth - BitToBitSkewFanout - BitToBitSkewMismatch   
- BitToBitClockDistn - CLK+vsCLK-skew - CLKdutyCycleError - CLKrandomJitter  
- CLKtoMeanDataSkew  - DataToDataSkew < 0.10 UI
~

The slice to slice clock skew across the width of a BoW link must be less than 3 ns.
This is dominated by the TxClk distribution network.

Since these signals do not leave the package, most of these specs must be verified with simulation.
If the slice implementation allows programmatic control of the DLL alignment values, 
varying those values after locking the DLL may provide margin information.

# Electrical Specifications

## Voltages
To support a wide range of technologies BoW does not enforce a common 
VDD power rail voltage. In order to ensure that there is at least one common 
interoperable mode BoW implementations must support electrical specifications targeting 
rail to rail signaling based on a 0.75 V +/- 5% power supply (see electrical 
specifications). BoW interfaces can support higher or lower signaling 
voltages without limit but must support 0.75 V based signaling at 2 Gbps 
Double Data Rate (DDR) to ensure interoperability.

## ESD Requirements
BOW IO should be designed to support 50 V CDM (Charged Device Model) and 
250 V HBM (Human Body Model).  This requirement is similar to other die to die 
interface standards. It is generally insufficient for signals that go to package pins.

## Termination Requirements
BoW datarates (Typically 5Gbps, up to 8Gbps for <1mm trace length) do not 
require termination.  Higher datarates (up to 16 Gbps) requires termination, 
and must be built with selectable termination.

## Target Channel Requirements

### Channel loss line limits

![bowspec_figure4]

[bowspec_figure4]: images/bowspec_figure4.jpg "bowspec_figure4" { width:auto; max-width:90% }

BoW channel limit is limited by the round trip reflection delay and limited to <10mm for 
a 5Gbaud with proper slew rate control

Enabling termination enables longer channel regardless of baud rate, but to minimize 
the equalization requirement, it shall meet the provided Insertion Loss limit line.

### Return loss line limits

![bowspec_figure5]

[bowspec_figure5]: images/bowspec_figure5.jpg "bowspec_figure5" { width:auto; max-width:90% }

BoW channel is expected to be unterminated in the default mode and does not need to 
follow any Return Loss spec. 

Enabling Termination mode requires meeting the provided Return Loss limit line for 
proper operation and meeting target BER.

### Power Sum Crosstalk Limit Line

~center
![bowspec_figure6]

[bowspec_figure6]: images/bowspec_figure6.jpg "bowspec_figure6" { width:auto; max-width:90% }

Crosstalk is defined in form of the sum of crosstalk power of all aggressors on a target trace.
~

The proposed power-sum crosstalk spec for termination mode:
PS Xtalk Limit = -10 dB -37dB.e^(-f/8GHz)

A victim trace in between two aggressor traces on the same package substrate layer with air 
gap spacing of 50 um (or more) with at least a reference plane under or above will meet the 
proposed power-sum crosstalk limit.

#  Logic Interface

\<To be completed in subsequent version of specification>

# Physical Constraints

## Signal Ordering

## Preferred Bump Patterns
BoW does not dictate a specific bump pitch but does have a defined bump pattern.
By not specifying a bump pitch, implementations can be built on both legacy and 
leading edge technologies.  Specifying a signal pattern, however, allows package 
routing between interfaces with limited signal crossings.

BoW can be implemented with any number of stacked interfaces, however such stacking 
should implement the bump pattern with an alternating stagger of signals.

~center
![bowspec_figure7]

[bowspec_figure7]: images/bowspec_figure7.jpg "bowspec_figure7" { width:auto; max-width:90% }
~
Additional interfaces alternate as shown above.

Example Bump Pattern (based on 130 um staggered bump pitch) shown below:
~center
![bowspec_figure8]

[bowspec_figure8]: images/bowspec_figure8.jpg "bowspec_figure8" { width:auto; max-width:90% }
~

#Testability

\<addressed in subsequent version of specification>

## Loopback Test

## IEEE 1149.1

# Document History
|----------|-------|---------------------------|
|Date      |Version|Notes                      |
+----------+-------+---------------------------+
|09/20/2019|0.7    |Initial version for release|
|----------|-------|---------------------------|
|          |       |                           |
|----------|-------|---------------------------|

# Known Feature Request
|----------|-----------------------------------------------------------------|
|Date      |Notes                                                            |
+----------+-----------------------------------------------------------------+
|09-06-2019|Microbump compatibility - addressed with non-specified bump pitch|
|----------|-----------------------------------------------------------------|
|09-06-2019|Ultra short high speed unterminated  - addressed                 |
|----------|-----------------------------------------------------------------|
|          |                                                                 |
|----------|-----------------------------------------------------------------|






















